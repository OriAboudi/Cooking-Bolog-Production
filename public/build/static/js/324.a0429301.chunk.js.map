{"version":3,"file":"static/js/324.a0429301.chunk.js","mappings":"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","sources":["components/pages/userCMS/submitPage.jsx","shared/components/modalAddRecipe.jsx","shared/components/modalLoading.jsx"],"sourcesContent":["import React, { useRef } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useState } from 'react'\r\nimport { MyData } from '../../../context/dataContext'\r\nimport { ADD_RECIPE, CATEGORIES_NAME, PRESET_KEY } from '../../../constant/constant'\r\nimport { apiGet, apiPost } from '../../../services/services'\r\nimport ModalAddRecipe from '../../../shared/components/modalAddRecipe'\r\nimport ModalLoading from '../../../shared/components/modalLoading'\r\nimport Select from \"react-tailwindcss-select\";\r\nimport { useEffect } from 'react'\r\n\r\nconst optionsRating = [\r\n  { value: \"0\", label: \" ✳✳✳✳✳✳\" },\r\n  { value: \"1\", label: \"⭐ \" },\r\n  { value: \"2\", label: \"⭐⭐ \" },\r\n  { value: \"3\", label: \"⭐⭐⭐ \" },\r\n  { value: \"4\", label: \"⭐⭐⭐⭐ \" },\r\n  { value: \"5\", label: \"⭐⭐⭐⭐⭐ \" },\r\n];\r\n\r\n\r\nfunction SubmitPage() {\r\n  const [ingredient, setIngredient] = useState(['']);\r\n  const [openMR, setOpenMR] = useState(false);\r\n  const [openML, setOpenML] = useState(false);\r\n  const [recipe, setRecipe] = useState({});\r\n  const [options, setOptions] = useState([])// todo options subcate\r\n  const [optionCat, setOptionsCat] = useState([])\r\n  const [selected, setSelected] = useState(null);\r\n  const [rating, setRating] = useState(null);\r\n\r\n\r\n  const { doApi } = MyData()\r\n  const inputR = useRef();\r\n  const fileR = useRef();\r\n  const { register, handleSubmit, formState: { errors } } = useForm()\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    doApiCat();\r\n  }, [])\r\n  const doApiCat = async () => {\r\n\r\n    const { data } = await apiGet(CATEGORIES_NAME)\r\n\r\n\r\n\r\n    const newArray = data.map(obj => {\r\n      for (let key in obj) {\r\n        if (key === 'name') {\r\n          obj.label = obj.name;\r\n          delete obj.name;\r\n        }\r\n        if (key === 'url_code') {\r\n          obj.value = obj.url_code;\r\n          delete obj.url_code;\r\n        }\r\n\r\n        delete obj._id;\r\n      }\r\n      return obj;\r\n    });\r\n\r\n    console.log(newArray)\r\n    setOptions(newArray)\r\n  }\r\n  const handleChangeCategory = value => {\r\n    console.log(\"value:\", value);\r\n    setSelected(value);\r\n\r\n  };\r\n  const handleChangeRating = value => {\r\n\r\n    console.log(\"value:\", value);\r\n    setRating(value);\r\n\r\n  };\r\n  const onSub = (bodyData) => {\r\n    setOpenML(true)\r\n\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(fileR.current.files[0])\r\n    reader.addEventListener(\"loadend\", async () => {\r\n      bodyData.img_url = reader.result;\r\n      bodyData.ingredients = ingredient;\r\n      bodyData.rating = rating.value;\r\n      bodyData.subCategory = selected;\r\n      doApiRecipe(bodyData)\r\n    })\r\n  }\r\n  // send the data to server and Get the recipe after creating and show in modal\r\n  const doApiRecipe = async (_data) => {\r\n    try {\r\n      const { data } = await apiPost(ADD_RECIPE, _data);\r\n      console.log(data);\r\n      if (data._id) {\r\n        setRecipe(data)\r\n        doApi()\r\n        setOpenML(false)\r\n        setOpenMR(true);\r\n      }\r\n      else {\r\n        alert(\"something went wrong , try again later\")\r\n      }\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n  }\r\n  // add ingredient to array (with validation)  \r\n  const addIngredient = () => {\r\n    console.log(\"eheh\");\r\n    if (ingredient[0] === '') {\r\n\r\n      setIngredient([inputR.current.value, \"\"]);\r\n\r\n    } else {\r\n\r\n      let tempArr = [...ingredient];\r\n      tempArr.pop()\r\n      if (inputR.current.value === \"\") {\r\n        alert(\"Please enter a value int the input\");\r\n      }\r\n      else {\r\n        tempArr.push(inputR.current.value, \"\")\r\n        setIngredient(tempArr);\r\n\r\n\r\n      }\r\n    }\r\n\r\n    console.log(ingredient);\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"flex flex-col   items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\r\n\r\n      {/* check with xl width */}\r\n      <div className=\"w-[330px] sm:w-[500px] md:w-[650px]\">\r\n\r\n        {/* tital */}\r\n        <div className='flex flex-col items-center mb-[40px] '>\r\n          <h2 className=\"mt-6 text-center text-3xl font-bold tracking-tight text-gray-900\">\r\n            Submit Your Recipe\r\n          </h2>\r\n          <p className=\"text-center sm:w-[400px] text-[13px] mt-3 text-gray-600\">Share your amazing recipies with thousands of web developers accross the world. Fill our form to get started.</p>\r\n        </div>\r\n        {!options ? <div>Loading</div> :\r\n          <form onSubmit={handleSubmit(onSub)} className=\"mt-8 space-y-6 \" >\r\n\r\n            <div className=\" rounded-md shadow-sm\">\r\n              {/* name */}\r\n              <div className='my-3' >\r\n                <label className=\"text-gray-500  font-normal text-[15px] mt-1\">\r\n                  Recipe Name:\r\n                </label>\r\n                <input\r\n                  {...register('name', { required: { value: true, message: 'name is required' }, minLength: { value: 2, message: 'min 2 characters' }, maxLength: { value: 200, message: ' maximum 20 characters' } })}\r\n                  type=\"text\"\r\n\r\n                  className=\"mt-1 relative  rounded-lg  appearance-none  rounded-t-md border border-gray-300 px-3 py-2 text-gray-900 placeholder-gray-500 focus:z-10 focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\r\n\r\n                />\r\n\r\n                {errors.fullName && <p className='text-red-600'> {errors.fullName.message}</p>}\r\n              </div>\r\n              {/* description */}\r\n              <div  >\r\n                <label className=\"text-gray-500  font-normal text-[15px] mt-1\">\r\n                  Description:\r\n                </label>\r\n                <input\r\n                  {...register('description', { required: { value: true, message: 'description is required' }, minLength: { value: 2, message: 'min 2 characters' }, maxLength: { value: 500, message: ' maximum 20 characters' } })}\r\n                  type=\"text\"\r\n\r\n                  className=\"mt-1 relative  rounded-lg  appearance-none  rounded-t-md border border-gray-300 px-3 py-2 text-gray-900 placeholder-gray-500 focus:z-10 focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\r\n\r\n                />\r\n\r\n                {errors.description && <p className='text-red-600'> {errors.description.message}</p>}\r\n              </div>\r\n\r\n              {/*  info  */}\r\n              <div className='my-4'  >\r\n\r\n                <label className=\"text-gray-500 font-normal text-[15px] \">\r\n                  Info:\r\n                </label>\r\n\r\n                <textarea\r\n                  rows={5}\r\n                  {...register('info', { required: { value: true, message: 'info is required' } })}\r\n                  type=\"text\"\r\n\r\n                  className=\"mt-1 relative  rounded-lg  appearance-none rounded-t-md border border-gray-300 px-3 py-2 text-gray-900 placeholder-gray-500 focus:z-10 focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\r\n                />\r\n\r\n                {errors.info && <p className='text-red-600'> {errors.info.message}</p>}\r\n              </div>\r\n\r\n              {/*category select  */}\r\n              <div className='my-3'>\r\n                <label for=\"countries\" className=\"text-gray-500 font-normal text-[15px] \">Select your country</label>\r\n                <select id=\"countries\"\r\n                  {...register('category', { required: true })}\r\n                  className=\"mt-2 bg-gray-50 border border-gray-300 text-gray-500 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:placeholder-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500\">\r\n                  <option value=\"\"></option>\r\n                  {options.map((item, i) => <option key={i} value={item.value}>{item.label}</option>)}\r\n                </select>\r\n                {errors.category && <p className='text-red-600'>Please select a category</p>}\r\n              </div>\r\n\r\n\r\n\r\n              {/*sub - categories select  */}\r\n              <label className=\"text-gray-500 font-normal mt-3 text-[15px]\">\r\n                Select Sub Category:\r\n              </label>\r\n\r\n              <div className='mt-2 mb-4'>\r\n                <Select\r\n                  primaryColor={\"default\"}\r\n                  value={selected}\r\n                  onChange={handleChangeCategory}\r\n                  options={options}\r\n                  isMultiple={true}\r\n                  isSearchable={true}\r\n                  onSearchInputChange={\r\n                    (e) => { console.log(\"value:\", e.target.value); }\r\n                  }\r\n                />\r\n              </div>\r\n\r\n              {/* {rating} */}\r\n\r\n              <label className=\"text-gray-500 font-normal mt-1 text-[15px]\">\r\n                Select a Rating:\r\n              </label>\r\n              <div className='my-2'>\r\n                <Select\r\n                  value={rating}\r\n                  onChange={handleChangeRating}\r\n                  options={optionsRating}\r\n                />\r\n\r\n              </div>\r\n\r\n\r\n              {/* url_site  */}\r\n              <div className='my-3' >\r\n                <label className=\"text-gray-500   font-normal text-[15px]\">\r\n                  Source:\r\n                </label>\r\n                <input\r\n                  {...register('url_site', {\r\n                    required: {\r\n                      value: true,\r\n                      message: 'url_site is required',\r\n                    }\r\n                  })}\r\n                  type=\"input\"\r\n\r\n                  className=\"mt-1  relative rounded-lg  appearance-none  rounded-t-md border border-gray-300 px-3 py-2 text-gray-900 placeholder-gray-500 focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 \"\r\n                />\r\n                {errors.url_site && <p className='text-red-600'>{errors.url_site.message} </p>}\r\n\r\n              </div>\r\n\r\n              {/*  ingredient  */}\r\n              <div  >\r\n                <label className=\"text-gray-500   font-normal text-[15px]\">\r\n                  Ingredient:\r\n                </label>\r\n\r\n                {ingredient.map((itme, i) => {\r\n                  return (\r\n                    <div key={i} >\r\n                      <input\r\n                        {...register('ingredients', { required: { value: false } })}\r\n                        type=\"text\"\r\n                        className=\"mt-1 mb-1 relative rounded-lg  appearance-none  rounded-t-md border border-gray-300 px-3 py-2 text-gray-900 placeholder-gray-500 focus:z-10 focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\r\n                        ref={inputR}\r\n                      />\r\n                      {errors.ingredients && <p className='text-red-600'>{errors.ingredients.message} </p>}\r\n\r\n                    </div>\r\n                  )\r\n                })}\r\n\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"my-4 group relative text-center flex justify-center rounded-md border border-transparent bg-gray-800 py-2 px-4 text-sm font-medium text-white hover:bg-gray-900 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\r\n                  onClick={() => {\r\n\r\n                    addIngredient()\r\n                  }}\r\n                >\r\n                  +Ingredient\r\n                </button>\r\n              </div>\r\n\r\n              {/* image product  */}\r\n              <div className='flex flex-col ' >\r\n\r\n                <label className=\"text-gray-500   font-normal text-[15px] my-2\">\r\n                  Product Image:\r\n                </label>\r\n\r\n\r\n                <label className=\"block mb-[36px] mt-3\">\r\n                  <span className=\"sr-only\">Choose profile photo</span>\r\n                  <input type=\"file\"\r\n                    ref={fileR}\r\n                    className=\"block w-full text-sm text-gray-500\r\n                    file:mr-4 file:py-2 file:px-4\r\n                    file:rounded-full file:border-0\r\n                    file:text-sm file:font-semibold\r\n                   file:bg-slate-100 file:text-gray-500\r\n                    hover:file:bg-slate-400\r\n                           \r\n    \"/>\r\n                </label>\r\n\r\n\r\n\r\n\r\n              </div>\r\n\r\n\r\n              <div>\r\n                <button\r\n                  onClick={() => {\r\n                    if (inputR.current.value === '') {\r\n                      ingredient.pop();\r\n                    }\r\n                    else {\r\n                      ingredient.pop();\r\n                      setIngredient([...ingredient, inputR.current.value]);\r\n                    }\r\n                  }}\r\n                  type=\"submit\"\r\n                  className=\"group relative text-center flex justify-center rounded-md border border-transparent bg-gray-800 py-2 px-4 text-sm font-medium text-white hover:bg-gray-900 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\r\n                >\r\n\r\n                  Submit\r\n                </button>\r\n              </div>\r\n\r\n            </div>\r\n          </form>}\r\n\r\n      </div>\r\n      <ModalLoading open={openML} setOpen={setOpenML} />\r\n      <ModalAddRecipe open={openMR} setOpen={setOpenMR} data={recipe} grayButtonText={\"Cancel\"} href={'/'} />\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default SubmitPage","import { Fragment, useRef } from 'react'\r\nimport { Dialog, Transition } from '@headlessui/react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nexport default function ModalAddRecipe(\r\n    {\r\n        open,\r\n        setOpen,\r\n        href,\r\n        grayButtonText,\r\n        data\r\n    }) {\r\n\r\n\r\n    \r\n    const cancelButtonRef = useRef(null)\r\n\r\n    return (\r\n        <Transition.Root show={open} as={Fragment}>\r\n            <Dialog as=\"div\" className=\"relative z-10\" initialFocus={cancelButtonRef} onClose={setOpen}>\r\n                <Transition.Child\r\n                    as={Fragment}\r\n                    enter=\"ease-out duration-300\"\r\n                    enterFrom=\"opacity-0\"\r\n                    enterTo=\"opacity-100\"\r\n                    leave=\"ease-in duration-200\"\r\n                    leaveFrom=\"opacity-100\"\r\n                    leaveTo=\"opacity-0\"\r\n                >\r\n                    <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\r\n                </Transition.Child>\r\n\r\n                <div className=\"fixed inset-0 z-10 overflow-y-auto\">\r\n                    <div className=\"flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0\">\r\n                        <Transition.Child\r\n                            as={Fragment}\r\n                            enter=\"ease-out duration-300\"\r\n                            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n                            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\r\n                            leave=\"ease-in duration-200\"\r\n                            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\r\n                            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n                        >\r\n                            <Dialog.Panel className=\"relative transform overflow-hidden rounded-lg bg-white text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-4xl sm:m-4\">\r\n                                <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4 \">\r\n                                    <div className=\"flex items-center justify-center \">\r\n\r\n\r\n                                        {/* <div className=\"mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full bg-gray-100 sm:mx-0 sm:h-10 sm:w-10\">\r\n                                        <BsShieldCheck className=\"h-6 w-6 text-green-400\" aria-hidden=\"true\" />\r\n                                        </div>\r\n\r\n                                        \r\n */}\r\n\r\n\r\n\r\n                                        {/* <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\r\n                                            <Dialog.Title as=\"h3\" className=\"text-lg font-medium leading-6 text-gray-900\">\r\n                                                {header}\r\n                                            </Dialog.Title>\r\n                                            <div className=\"mt-2\">\r\n                                                <p className=\"text-sm text-gray-500\">\r\n                                                    {description}\r\n                                                </p>\r\n                                            </div>\r\n                                        </div> */}\r\n\r\n                                        {data && <div>\r\n\r\n                                            <div className='flex flex-col  justify-center items-center   mt-[20px] mb-[20px]'>\r\n                                                <h2 className='  text-3xl font-bold tracking-tight text-green-600 text-center'> Created successfully</h2>\r\n                                                <div className='p-4'>\r\n                                                    <img src={data.img_url} className='rounded-3xl  w-[300px]' alt=\"\" />\r\n                                                </div>\r\n                                                <h2 className='text-[26px]'>{data.name}</h2>\r\n                                                {/* <div className='mt-3 sm:hidden'>\r\n                                                    <h2 className='text-center sm:text-start text-3xl font-bold tracking-tight text-gray-900'>{data.name}</h2>\r\n\r\n                                                </div> */}\r\n\r\n                                                <div className='p-4'>\r\n                                                    <div className='hidden sm:block'>\r\n                                                        <h2 className='mt-1'>Description</h2>\r\n                                                        <p className='w-[300px] md:w-[450px] mb-4 text-[15px]  text-gray-600'>{data.description}</p>\r\n\r\n                                                    </div>\r\n\r\n\r\n                                                    <div className=''>\r\n                                                        <h2 className='mt-1'>Category</h2>\r\n                                                        <p className='mb-4 '>{data.category}</p>\r\n                                                        <h2 className='mt-1'>Cooking Info</h2>\r\n                                                        <p className='w-[300px] md:w-[450px] mb-4 text-[15px]  text-gray-600'>{data.info}</p>\r\n                                                    </div>\r\n                                                    <p className='text-[15px]  text-gray-600 mb-1'>Sourc: <span>{data.url_site}</span></p>\r\n\r\n                                                    <div>\r\n                                                        <h2 className='mb-1'>Ingredients</h2>\r\n                                                        <ul className=''>\r\n                                                            {data.ingredients?.map((item, i) => {\r\n                                                                return (\r\n                                                                    <div key={i}>\r\n                                                                        <hr />\r\n                                                                        <li className='text-[15px] pl-2 p-1 text-gray-600 '>{item}</li>\r\n                                                                    </div>\r\n                                                                )\r\n                                                            })}\r\n\r\n                                                            {/* <hr />  <li className='text-[15px] pl-2 p-1 text-gray-600 '>tast</li>\r\n                                                        <hr />  <li className='text-[15px] pl-2 p-1 text-gray-600 '>tast</li>\r\n                                                        <hr />  <li className='text-[15px] pl-2 p-1 text-gray-600 '>tast</li>\r\n                                                        <hr />  <li className='text-[15px] pl-2 p-1 text-gray-600 '>tast</li>\r\n                                                        <hr />  <li className='text-[15px] pl-2 p-1 text-gray-600 '>tast</li>\r\n                                                        <hr />  <li className='text-[15px] pl-2 p-1 text-gray-600 '>tast</li> */}\r\n\r\n\r\n\r\n                                                        </ul>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        }\r\n\r\n\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"bg-gray-50 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6\">\r\n                                    {/* <button\r\n                                        type=\"button\"\r\n                                        className=\"inline-flex w-full justify-center rounded-md border border-transparent bg-red-600 px-4 py-2 text-base font-medium text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 sm:ml-3 sm:w-auto sm:text-sm\"\r\n                                        onClick={() => {\r\n                                            nav(href)\r\n                                            setOpen(false)\r\n                                        }\r\n                                        }\r\n                                    >\r\n                                        {redButtonText}\r\n                                    </button> */}\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"mt-3 inline-flex w-full justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-base font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\r\n                                        onClick={() => {\r\n                                            setOpen(false)\r\n                                           \r\n                                        }}\r\n\r\n                                        ref={cancelButtonRef}\r\n                                    >\r\n                                        {grayButtonText}\r\n                                    </button>\r\n                                </div>\r\n                            </Dialog.Panel>\r\n                        </Transition.Child>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n        </Transition.Root>\r\n    )\r\n}\r\n","import { Fragment, useRef } from 'react'\r\nimport { Dialog, Transition } from '@headlessui/react'\r\n\r\nimport { FaSearch } from 'react-icons/fa'\r\n\r\n\r\nexport default function ModalLoading (\r\n  {\r\n    open,\r\n    setOpen,\r\n \r\n\r\n  }) {\r\n\r\n\r\n\r\n  const cancelButtonRef = useRef(null)\r\n\r\n  return (\r\n    <Transition.Root show={open} as={Fragment}>\r\n      <Dialog as=\"div\" className=\"relative z-10\" initialFocus={cancelButtonRef} onClose={setOpen}>\r\n        <Transition.Child\r\n          as={Fragment}\r\n          enter=\"ease-out duration-300\"\r\n          enterFrom=\"opacity-0\"\r\n          enterTo=\"opacity-100\"\r\n          leave=\"ease-in duration-200\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\"\r\n        >\r\n          <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\r\n        </Transition.Child>\r\n\r\n        <div className=\"fixed inset-0 z-10 overflow-y-auto\">\r\n          <div className=\"flex min-h-full items-start justify-center p-4 text-center sm:items-center sm:p-0\">\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n              enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\r\n              leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n            >\r\n              <Dialog.Panel className=\"relative transform overflow-hidden rounded-lg bg-white text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg\">\r\n                <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n                  <div className=\"sm:flex sm:items-start\">\r\n                   \r\n                    <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\r\n                      <Dialog.Title as=\"h3\" className=\"text-lg font-medium leading-6 text-gray-900\">\r\n                        \r\n                      </Dialog.Title>\r\n                      <div className=\"mt-2\">\r\n                      \r\n                        <div>\r\n                        <img src=\"https://media.tenor.com/p1px63RmzGEAAAAC/cinnamon-rolls-sending-virtual-hug.gif\" alt=\"loading\" />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n             \r\n              </Dialog.Panel>\r\n            </Transition.Child>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    </Transition.Root>\r\n  )\r\n}\r\n"],"names":["optionsRating","value","label","useState","ingredient","setIngredient","openMR","setOpenMR","openML","setOpenML","recipe","setRecipe","options","setOptions","selected","setSelected","rating","setRating","doApi","MyData","inputR","useRef","fileR","useForm","register","handleSubmit","errors","formState","useEffect","doApiCat","apiGet","CATEGORIES_NAME","data","newArray","map","obj","key","name","url_code","_id","console","log","doApiRecipe","_data","apiPost","ADD_RECIPE","alert","className","onSubmit","bodyData","reader","FileReader","readAsDataURL","current","files","addEventListener","img_url","result","ingredients","subCategory","required","message","minLength","maxLength","type","fullName","description","rows","info","for","id","item","i","category","primaryColor","onChange","isMultiple","isSearchable","onSearchInputChange","e","target","url_site","itme","ref","onClick","tempArr","pop","push","addIngredient","open","setOpen","grayButtonText","href","ModalAddRecipe","cancelButtonRef","show","as","Fragment","initialFocus","onClose","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","src","alt","ModalLoading"],"sourceRoot":""}